from insFormats import *
from insType import *
from insGenerator import *

mfc0 = Instruction('mfc0', mfc0Format, mfc0)
mtc0 = Instruction('mtc0', mtc0Format, mtc0)

addu = Instruction('addu', calRegFormat, cal_r)
subu = Instruction('subu', calRegFormat, cal_r)
ori = Instruction('ori', calImmFormat, cal_i)
lui = Instruction('lui', luiFormat, cal_i)
lw = Instruction('lw', loadStoreFormat, load)
slti = Instruction('slti', calImmFormat, cal_i)

add = Instruction('add', calRegFormat, cal_r)
sub = Instruction('sub', calRegFormat, cal_r)
sll = Instruction('sll', calShmatFormat, cal_s)
srl = Instruction('srl', calShmatFormat, cal_s)
sra = Instruction('sra', calShmatFormat, cal_s)
sllv = Instruction('sllv', calRegFormat, cal_r)
srlv = Instruction('srlv', calRegFormat, cal_r)
srav = Instruction('srav', calRegFormat, cal_r)
and_ = Instruction('and', calRegFormat, cal_r)
or_ = Instruction('or', calRegFormat, cal_r)
xor = Instruction('xor', calRegFormat, cal_r)
nor = Instruction('nor', calRegFormat, cal_r)
addi = Instruction('addi', calImmFormat, cal_i)
addiu = Instruction('addiu', calImmFormat, cal_i)
andi = Instruction('andi', calImmFormat, cal_i)
xori = Instruction('xori', calImmFormat, cal_i)
slt = Instruction('slt', calRegFormat, cal_r)
slti = Instruction('slti', calImmFormat, cal_i)
sltiu = Instruction('sltiu', calImmFormat, cal_i)
sltu = Instruction('sltu', calRegFormat, cal_r)

mfhi = Instruction('mfhi', mfFormat, mf_type)
mflo = Instruction('mflo', mfFormat, mf_type)
mthi = Instruction('mthi', mtFormat, mt_type)
mtlo = Instruction('mtlo', mtFormat, mt_type)
mult = Instruction('mult', mdFormat, md_type)
multu = Instruction('multu', mdFormat, md_type)
div = Instruction('div', mdFormat, md_type)
divu = Instruction('divu', mdFormat, md_type)

bne = Instruction('bne', bTypeFormat, b_type)
blez = Instruction('blez', bTypeFormat, b_type)
bgtz = Instruction('bgtz', bTypeFormat, b_type)
bltz = Instruction('bltz', bTypeFormat, b_type)

j = Instruction('j', jumpFormat, j_o) # originaly jump
jal = Instruction('jal', jumpFormat, link)
jr = Instruction('jr', jumpRegFormat, j_r)
sw = Instruction('sw', loadStoreFormat, store)
beq = Instruction('beq', bTypeFormat, b_type)
jalr = Instruction('jalr', jumpRegLinkFormat, j_r_link)
sb = Instruction('sw', loadStoreFormat, store)
sh = Instruction('sw', loadStoreFormat, store)
lb = Instruction('lb', loadStoreFormat, load)
lbu = Instruction('lbu', loadStoreFormat, load)
lh = Instruction('lh', loadStoreFormat, load)
lhu = Instruction('lhu', loadStoreFormat, load)